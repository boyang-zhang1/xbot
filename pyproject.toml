[tool.poetry]
name = "xbot"
version = "0.1.0"
description = "Modernised toolkit for scraping, translating, and publishing curated X threads."
authors = ["XBot Maintainers <maintainers@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "xbot", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
aiofiles = "^23.2.1"
aiohttp = "^3.9.5"
async-timeout = "^4.0.3"
cachetools = "^5.3.3"
httpx = "^0.27.0"
loguru = "^0.7.2"
pendulum = "^3.0.0"
pydantic = "^2.7.0"
pydantic-settings = "^2.5.2"
python-dotenv = "^1.0.1"
rich = "^13.7.1"
structlog = "^24.1.0"
telethon = "^1.35.0"
tweepy = "^4.14.0"
typer = {extras = ["all"], version = "^0.12.3"}
openai = "^1.30.1"
requests-oauthlib = "^1.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
respx = "^0.20.2"
ruff = "^0.4.2"
mypy = "^1.9.0"
pre-commit = "^3.7.0"

[tool.poetry.scripts]
xbot = "xbot.cli.main:app"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "ASYNC", "S"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "S105"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
plugins = []
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "telethon.*",
    "tweety.*",
    "pythonjsonlogger.*",
    "requests_oauthlib.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "xbot.infra.clients.openai_client",
    "xbot.infra.clients.x_publisher",
    "xbot.infra.telegram.bot",
    "xbot.cli.telegram",
]
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-ra --strict-markers --strict-config --cov=xbot --cov-report=term-missing"
asyncio_mode = "strict"
